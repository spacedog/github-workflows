---
name: Terraform Deploy

env:
  # Terraform environment variables
  TF_CLI_ARGS_plan: "-input=false -no-color"
  TF_CLI_ARGS_apply: "-input=false -no-color"
  TF_IN_AUTOMATION: true

on:
  workflow_call:
    inputs:
      state_bucket:
        required: true
        type: string
      state_dynamodb:
        required: true
        type: string
      terraform_version:
        required: false
        type: string
        default: latest
      environment:
        required: false
        type: string
        default: development
      role_arn:
        required: false
        type: string
        default: role_arn
      tf_workspace:
        required: false
        type: string
        default: default
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      extra_env:
        required: false
jobs:
  terraform-deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
      TF_VAR_TARGET_DEPLOY_ENV: ${{ inputs.environment }}
      TF_WORKSPACE: ${{ inputs.tf_workspace }}
    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v2
        with:
            terraform_version: ${{ inputs.terraform_version }}

      - name: Set dynamic environment variables
        run: echo -e "${{ inputs.exrta_env }} >> $GITHUB_ENV"

      - name: Terraform Init
        id: init
        run: >-
          terraform init -get=true
          -upgrade=true
          -input=false
          -no-color
          -backend-config="role_arn=${{ inputs.role_arn }}"
          -backend-config="bucket=${{ inputs.state_bucket }}"
          -backend-config="dynamodb_table=${{ inputs.state_dynamodb }}"

      - name: Download terraform.tfplan
        uses: actions/download-artifact@v2
        with:
          name: terraform-plan-${{ inputs.environment }}
      - name: Terraform Deploy
        id: deploy
        run: terraform apply -input=false terraform.tfplan
